import java.util.Scanner;

public class Main {

    private static Scanner teclado;

    public static void main(String[] args) {
        teclado = new Scanner(System.in);
        boolean executarNovamente;
        
        do {
            executarNovamente = executarPrograma();
        } while (executarNovamente);
        
        System.out.println("Programa encerrado. Obrigado!");
        teclado.close();
    }
    
    public static boolean executarPrograma() {
        limparTela();
        
        System.out.println("╔══════════════════════════════════════╗");
        System.out.println("║         PLANILHA DE NOTAS            ║");
        System.out.println("║      (3 notas por aluno)             ║");
        System.out.println("╚════════════════════════════════════╝");
        
        // Solicitar quantidade de alunos
        System.out.print("Digite a quantidade de alunos: ");
        int qntdAlunos = teclado.nextInt();
        
        // Validar entrada
        if(qntdAlunos <= 0) {
            System.out.println("Erro! A quantidade de alunos deve ser maior que zero.");
            return perguntarSeDesejaContinuar();
        }
        
        // Quantidade fixa de notas (3 conforme a questão)
        int qntdNotas = 3;
        
        float[][] planilhaNotas = new float[qntdAlunos][qntdNotas];
        
        // Preencher as notas AV1 e AV2 para cada aluno
        for(int aluno = 0; aluno < qntdAlunos; aluno++) {
            limparTela();
            System.out.println("Notas do Aluno " + (aluno + 1) + ":");
            
            System.out.print("AV1: ");
            planilhaNotas[aluno][0] = teclado.nextFloat();
            
            System.out.print("AV2: ");
            planilhaNotas[aluno][1] = teclado.nextFloat();
            
            // Calcular média inicial
            float mediaInicial = (planilhaNotas[aluno][0] + planilhaNotas[aluno][1]) / 2;
            
            // Verificar se precisa da AV3
            if(mediaInicial < 6.0) {
                System.out.print("AV3 (média inicial " + mediaInicial + " < 6.0): ");
                planilhaNotas[aluno][2] = teclado.nextFloat();
                
                // Substituir a menor nota entre AV1 e AV2 pela AV3
                if(planilhaNotas[aluno][0] < planilhaNotas[aluno][1]) {
                    planilhaNotas[aluno][0] = planilhaNotas[aluno][2];
                } else {
                    planilhaNotas[aluno][1] = planilhaNotas[aluno][2];
                }
            } else {
                planilhaNotas[aluno][2] = 0; // AV3 não utilizada
                System.out.println("AV3: Não necessária (média inicial: " + mediaInicial + ")");
            }
        }
        
        // Exibir os resultados finais
        limparTela();
        System.out.println("╔══════════════════════════════════════╗");
        System.out.println("║         RESULTADO FINAL              ║");
        System.out.println("╚══════════════════════════════════════╝");
        
        System.out.println("Aluno\tAV1\tAV2\tAV3\tMédia\tSituação");
        System.out.println("══════════════════════════════════════════");
        
        for(int aluno = 0; aluno < qntdAlunos; aluno++) {
            float nota1 = planilhaNotas[aluno][0];
            float nota2 = planilhaNotas[aluno][1];
            float nota3 = planilhaNotas[aluno][2];
            float mediaFinal = (nota1 + nota2) / 2;
            
            System.out.printf("%d\t", aluno + 1);
            System.out.printf("%.1f\t%.1f\t", nota1, nota2);
            
            // Mostrar AV3 apenas se foi utilizada
            if(nota3 > 0) {
                System.out.printf("%.1f\t", nota3);
            } else {
                System.out.print("-\t");
            }
            
            System.out.printf("%.1f\t", mediaFinal);
            
            // Verificar situação
            if(mediaFinal >= 6.0) {
                System.out.print("APROVADO");
            } else {
                System.out.print("REPROVADO");
            }
            System.out.println();
        }
        
        return perguntarSeDesejaContinuar();
    }
    
    public static boolean perguntarSeDesejaContinuar() {
        String resposta;
        do {
            System.out.print("\nDeseja executar novamente? (S/N): ");
            resposta = teclado.next().toUpperCase();
            teclado.nextLine(); // Limpar buffer
            
            if (resposta.equals("S") || resposta.equals("SIM")) {
                return true;
            } else if (resposta.equals("N") || resposta.equals("NAO") || resposta.equals("NÃO")) {
                return false;
            } else {
                System.out.println("Resposta inválida! Digite novamente.");
            }
        } while (true);
    }
    
    public static void limparTela() {
        try {
            if (System.getProperty("os.name").contains("Windows")) {
                new ProcessBuilder("cmd", "/c", "cls").inheritIO().start().waitFor();
            } else {
                System.out.print("\033[H\033[2J");
                System.out.flush();
            }
        } catch (Exception e) {
            for (int i = 0; i < 20; i++) {
                System.out.println();
            }
        }
    }
}
